.row {
  // dont use width use max-width (makes it dynamic)
  // max-width makes elements fill the most availible space
  max-width: $grid-width;
  margin: 0 auto;

  @include respond(tab-port) {
    max-width: 50rem;
    padding: 0 3rem;
  }


  // .row:not(:last-child) 
  // ^selects everything but the last child
  &:not(:last-child) {
    margin-bottom: $gutter-verticle;

    @include respond(tab-port) {
      margin-bottom: $gutter-verticle-small;
    }
  }
  // importing clearfix from _mixins.scss
  @include clearfix;

  // [alt="img"] {} = selecting a all elements
  // above example is selecting all columns (called attribute selector)

  // * = select all classes where it contains "...col-..."
  // ^ = where all the class atrributes start with "col-..."
  // $ = any class that ends with "...col-"
  [class^="col-"] {
    float: left;
    &:not(:last-child) {
      margin-right: $gutter-horizontal;

      @include respond(tab-port) {
        margin-right: 0;
        margin-bottom: $gutter-verticle-small;
      }
    }

    @include respond(tab-port) {
      width: 100% !important;
    }
  }

  .col{
    &-1-of-2 {
      // allows you to make operations with different units
      // interpilation in sass = #{}
      width: calc((100% - #{$gutter-horizontal}) / 2);
    }
  
    &-1-of-3 {
      width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
      //                  ^^^^^^^^ u have to 2 * $gutter because there are now 2 gutters instead of only 1.  
    }
  
    &-2-of-3 {
      width: calc((2 * (100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
    }
  
    &-1-of-4 {
      width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
    }
  
    &-2-of-4 {
      width: calc(2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
    }
  
    &-3-of-4 {
      width: calc(3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal});
    }
  }
}